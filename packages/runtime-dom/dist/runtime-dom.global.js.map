{"version":3,"file":"runtime-dom.global.js","sources":["../../shared/src/index.ts","../../reactivity/src/effect.ts","../../reactivity/src/basehandler.ts","../../reactivity/src/reactive.ts","../../reactivity/src/ref.ts","../../reactivity/src/computed.ts","../../runtime-core/src/vnode.ts","../../runtime-core/src/apiCreateApp.ts","../../runtime-core/src/componentPubilcInstance.ts","../../runtime-core/src/component.ts","../../runtime-core/src/renderer.ts","../../runtime-core/src/h.ts","../src/nodeOps.ts","../src/patchProp.ts","../src/index.ts"],"sourcesContent":["export function isObject(val) {\r\n    return typeof val === 'object' && val != null\r\n}\r\n\r\nexport const extend = Object.assign\r\n\r\nexport function hasChange(oldValue, newValue) {\r\n    return oldValue !== newValue\r\n}\r\n\r\nexport let isIntegerKey = (key) => {\r\n    return parseInt(key) + '' === key\r\n}\r\n\r\nexport let isArray = Array.isArray;\r\n\r\nexport let isString = (val) => typeof val === 'string'\r\n\r\nexport let isFunction = val => typeof val === 'function'\r\n\r\nexport let hasOwn = (target, key) => Object.prototype.hasOwnProperty.call(target, key)\r\n\r\nexport let isVnode = (vnode) => vnode.__v_isVnode === true\r\n\r\nexport const enum ShapFlags {\r\n    ELEMENT = 1,  // 标识是一个元素\r\n    FUNCTIONAL_COMPONENT = 1 << 1,  // 函数组件\r\n    STATEFUL_COMPONENT = 1 << 2,  // 带状态组件\r\n    TEXT_CHILDREN = 1 << 3,  // 孩子是文本\r\n    ARRAY_CHILDREN = 1 << 4, // 孩子是数组\r\n    SLOTS_CHILDREN = 1 << 5,  // 插槽孩子\r\n    TELEPORT = 1 << 6,  // 传送门\r\n    SUSPENSE = 1 << 7,  // 实现异步组件等待\r\n    COMPONENT_SHOULD_KEEP_ALIVE = 1 << 8,  // 是否需要keep-alive\r\n    COMPONENT_KEEP_ALIVE = 1 << 9,  // 组件的keep-alive\r\n    COMPONET = ShapFlags.STATEFUL_COMPONENT | ShapFlags.FUNCTIONAL_COMPONENT\r\n}","import { isArray, isIntegerKey } from \"@vue/shared\";\r\n\r\nexport function effect(fn, options: any = {}) {\r\n    const effect = createReactiveEffect(fn, options)\r\n    if (!options.lazy) {\r\n        effect()\r\n    }\r\n    return effect;  // 返回响应式的effect\r\n}\r\n\r\nlet activeEffect;\r\nlet effectStack = [];\r\nlet id = 0;\r\n\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactvieEffect() {\r\n        try {\r\n            effectStack.push(effect);\r\n            activeEffect = effect;\r\n            return fn()\r\n        } finally {\r\n            effectStack.pop()\r\n            activeEffect = effectStack[effectStack.length - 1]\r\n        }\r\n    }\r\n\r\n    effect.id = id++;\r\n    effect.__isEffect = true;\r\n    effect.options = options;\r\n    effect.deps = [];  // 用来收集依赖了那些属性\r\n    return effect;\r\n}\r\n\r\nconst targetMap = new WeakMap()\r\n\r\nexport function track(target, type, key) {\r\n    if (activeEffect == undefined) {\r\n        // 用户只是进行取值操作，而且这个 值不是在effect中使用的什么都不用收集\r\n        return\r\n    }\r\n\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()))\r\n    }\r\n\r\n    let dep = depsMap.get(key)\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()))\r\n    }\r\n\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect)\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function trigger(target, type, key, newValue?, oldValue?) {\r\n    // 去映射表里找属性对应的effect，让他重新执行\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) return // 只是修改了属性，没有在effect中使用\r\n\r\n    const effectsSet = new Set();\r\n    // 如果同时又多个，依赖的effect是同一个，还有set做一个过滤\r\n    const add = (effectAdd) => {\r\n        if (effectAdd) {\r\n            effectAdd.forEach(effect => {\r\n                effectsSet.add(effect)\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // arr = [1,2,3]\r\n    // arr.length = 1\r\n    // arr.push(4)\r\n    // 1. 如果更改了数组的长度，小于依赖收集的长度，要触发重新渲染\r\n    // 2. 如果调用了push方法，或者其他新增数组的方法(必须能改变数组的长度)，也触发更新\r\n\r\n    if (isArray(target) && key === 'length') {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key > newValue || key === 'length') {\r\n                add(dep);  // 更改了数组的长度，比收集到的属性值小\r\n            }\r\n        })\r\n    } else {\r\n        add(depsMap.get(key))\r\n        switch (type) {\r\n            case 'add':\r\n                if (isArray(target) && isIntegerKey(key)) {\r\n                    // 增加属性，需要触发length 的依赖属性\r\n                    add(depsMap.get('length'))\r\n                }\r\n        }\r\n    }\r\n\r\n\r\n    effectsSet.forEach((effect: any) => {\r\n        if (effect.options.schedular) {\r\n            effect.options.schedular(effect)\r\n        } else {\r\n            effect()\r\n        }\r\n    })\r\n}","import { extend, hasChange, hasOwn, isArray, isIntegerKey, isObject } from \"@vue/shared\";\r\nimport { track, trigger } from \"./effect\";\r\nimport { reactive, readonly } from \"./reactive\";\r\n\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    // vue3针对的是对象进行劫持，不用改写原来的对象，如果是嵌套，当取值的时候才会代理\r\n    // vue2 针对的是属性劫持，改写了原来的对象，一上来就递归的\r\n    /**\r\n     * target 原来的对象\r\n     * key 设置的属性值\r\n     * receiver 代理对象\r\n     */\r\n    return function get(target, key, receiver) {\r\n        const res = Reflect.get(target, key, receiver)\r\n\r\n        if (!isReadonly) {\r\n            // console.log('收集当前属性，如果这个属性变化了，稍候进行视图更新')\r\n            track(target, 'get', key)\r\n        }\r\n\r\n        //  \r\n        if (shallow) {\r\n            return res\r\n        }\r\n\r\n        if (isObject(res)) {\r\n            // 懒递归 当我们取值的时候才会去做递归代理，如果不取值，默认代理一层\r\n            return isReadonly ? readonly(res) : reactive(res)\r\n\r\n        }\r\n        return res;\r\n    }\r\n}\r\n\r\nfunction createSetter(shallow = false) {\r\n    // 数组新增的时候，触发了两次set，1. 新增了一项，同时更改了长度。2.因为更改了长度，再次触发了set（第二次的触发时无意义的）\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n\r\n        // 设置属性，可能之前有，也有可能之前没有（新增和修改）\r\n\r\n        /**\r\n         * 如果判断数组是新增还是修改\r\n         * 1. 是数组\r\n         * 2. 修改的key是数字\r\n         * 3. key的值小于length\r\n         * 为修改\r\n         */\r\n\r\n        let hasKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key)\r\n\r\n        const res = Reflect.set(target, key, value, receiver)\r\n\r\n        if (!hasKey) {\r\n            console.log('新增')\r\n            trigger(target, 'add', key, value)\r\n        } else if (hasChange(oldValue, value)) {\r\n            console.log('修改')\r\n            trigger(target, 'set', key, value, oldValue)\r\n        }\r\n        return res;  // 返回是否设置成功\r\n    }\r\n}\r\n\r\nconst get = createGetter();\r\nconst shallowGet = createGetter(false, true)\r\nconst readonlyGet = createGetter(true)\r\nconst shallowReadonlyGet = createGetter(true, true)\r\n\r\nconst set = createSetter()\r\nconst shallowSet = createSetter(true)\r\n\r\nexport const mutableHandler = {\r\n    set: set,\r\n    get: get,\r\n}\r\n\r\nexport const shallowReactiveHandler = {\r\n    set: shallowSet,\r\n    get: shallowGet\r\n\r\n}\r\n\r\nconst readonlySet = {\r\n    set(target, key) {\r\n        console.warn(`cannot set ${JSON.stringify(target)} on key '${key}' failed`)\r\n    }\r\n}\r\n\r\nexport const readonlyHandler = extend({\r\n    get: readonlyGet\r\n}, readonlySet)\r\n\r\nexport const shallowReadonlyHandler = extend({\r\n    get: shallowReadonlyGet\r\n}, readonlySet)\r\n","import { isObject } from \"@vue/shared\"\r\nimport { mutableHandler, readonlyHandler, shallowReactiveHandler, shallowReadonlyHandler } from \"./basehandler\"\r\n\r\n\r\n\r\n// 是否是浅的，默认时深度\r\n// 是否为只读，默认为否\r\n\r\nexport function reactive(target) {\r\n    return createReactiveObject(target, false, mutableHandler)\r\n}\r\n\r\nexport function shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandler)\r\n}\r\n\r\nexport function readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandler)\r\n}\r\n\r\nexport function shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandler)\r\n}\r\n\r\n/**\r\n * \r\n * @param target 创建代理对象目标\r\n * @param isReadonly 是否为只读\r\n * @param baseHandler 针对不同的方法创建不同的代理对象\r\n */\r\n\r\n// weakMap(key只能时对象) \r\nconst reactiveMap = new WeakMap();  // 目的是添加缓存\r\nconst readonlyMap = new WeakMap();\r\nfunction createReactiveObject(target, isReadonly, baseHandler) {\r\n    if(!isObject(target)){\r\n        return target\r\n    }\r\n    // 代理缓存\r\n    let proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n\r\n    const existProxy = proxyMap.get(target)\r\n    if(existProxy){\r\n        return existProxy; // 如果\r\n    }\r\n    // 如果是对象，就做一个代理\r\n    const proxy = new Proxy(target, baseHandler);\r\n    proxyMap.set(target, proxy)\r\n    return proxy\r\n}","import { hasChange, isArray, isObject } from \"@vue/shared\";\r\nimport { track, trigger } from \"./effect\";\r\nimport { reactive } from \"./reactive\";\r\n\r\nexport function ref(value) {\r\n    // 把普通值变成一个引用类型，让一个普通值也具备响应式的能力\r\n    return createRef(value)\r\n}\r\n\r\nexport function shallowRef(value) {\r\n    return createRef(value, true)\r\n}\r\n\r\nconst convert = (v) => isObject(v) ? reactive(v) : v;\r\n\r\n// ts 中实现类的话，私有属性必须先声明才能使用\r\nclass RefImpl {\r\n    public _value;\r\n    constructor(public rawValue, public shallow) {\r\n        this._value = shallow ? rawValue : convert(rawValue)\r\n    }\r\n\r\n    get value() {\r\n        // 收集依赖\r\n        track(this, 'get', 'value')\r\n        return this._value\r\n    }\r\n\r\n    set value(newValue) {\r\n        // 触发更新\r\n        if (hasChange(newValue, this.rawValue)) {\r\n            this.rawValue = newValue;\r\n            this._value = this.shallow ? newValue : convert(newValue)\r\n\r\n            trigger(this, 'set', 'value', newValue)\r\n        }\r\n    }\r\n}\r\n\r\nfunction createRef(value, shallow = false) {\r\n    return new RefImpl(value, shallow);  // 借助类的属性访问器\r\n}\r\n\r\nclass ObjectRefImpl {\r\n    public __v_isRef = true;\r\n    constructor(public target, public key) {\r\n\r\n    }\r\n    get value() {\r\n        return this.target[this.key]\r\n    }\r\n    set value(newValue) {\r\n        this.target[this.key] = newValue\r\n    }\r\n}\r\n\r\nexport function toRef(target, key) {\r\n    return new ObjectRefImpl(target, key)\r\n}\r\n\r\n\r\nexport function toRefs(target, key) {\r\n    const res = isArray(target) ? new Array(target.length) : {}\r\n    for (let key in target) {\r\n        res[key] = toRef(target, key)\r\n    }\r\n    return res;\r\n}","import { isObject } from \"@vue/shared\";\r\nimport { effect, track, trigger } from \"./effect\";\r\n\r\nclass ComputedRefImpl {\r\n    public effect;\r\n    public _value;\r\n    public _dirty = true;\r\n    constructor(public getter, public setter) {\r\n        // 返回effect的执行权限\r\n        // 传入了schedular 后，下次数据更新，原则上应该让effec重新执行，下次更新会调用schedular\r\n        this.effect = effect(getter, {\r\n            lazy: true, schedular: (effect) => {\r\n                if (!this._dirty) {\r\n                    // 用户修改了依赖的属性\r\n                    this._dirty = true;\r\n                    trigger(this, 'get', 'value')\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    get value() {\r\n        if (this._dirty) {\r\n            this._value = this.effect()\r\n            this._dirty = false;\r\n        }\r\n        // 收集计算属性的依赖\r\n        track(this, 'get', 'value')\r\n        return this._value\r\n    }\r\n\r\n    set value(newValue) {\r\n        // 当用户给计算属性设置值时会触发，set方法，此时调用计算属性的setter\r\n        this.setter(newValue)\r\n    }\r\n}\r\n\r\nexport function computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n\r\n    if (isObject(getterOrOptions)) {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    } else {\r\n        getter = getterOrOptions;\r\n        setter = () => {\r\n            console.log(`computed no setter`)\r\n        }\r\n    }\r\n\r\n    return new ComputedRefImpl(getter, setter)\r\n}","import { isArray, isObject, isString, ShapFlags } from \"@vue/shared\"\r\n\r\nexport function createVnode(type, props, children = null) {\r\n\r\n    const shapeFlag = isString(type) ?\r\n        ShapFlags.ELEMENT : isObject(type) ? ShapFlags.STATEFUL_COMPONENT : 0\r\n    const vnode = {\r\n        __v_isVnode: true,\r\n        type,\r\n        props,\r\n        children,\r\n        key: props && props.key,\r\n        el: null,\r\n        shapeFlag,\r\n    }\r\n\r\n    normalizeChildren(vnode, children)\r\n    return vnode\r\n}\r\n\r\nfunction normalizeChildren(vnode, children) {  // 将儿子的类型同一记录在vnode的shapeFlag\r\n    let type = 0;\r\n    if (children == null) {\r\n\r\n    } else if (isArray(children)) {\r\n        type = ShapFlags.ARRAY_CHILDREN\r\n    } else {\r\n        type = ShapFlags.TEXT_CHILDREN\r\n    }\r\n    vnode.shapeFlag |= type\r\n}\r\n","import { createVnode } from \"./vnode\";\r\n\r\nexport function createAppAPI(render) {\r\n    return (rootCompont, rootProps) => {\r\n        const app = {\r\n            _component: rootCompont,\r\n            _props: rootProps,\r\n            _container: null,\r\n            mount(container) {\r\n                // 根据用户传入的组件，创建一个虚拟节点\r\n                const vnode = createVnode(rootCompont, rootProps);\r\n                app._container = container;\r\n                // 将虚拟节点变成真实节点\r\n                render(vnode, container)\r\n            }\r\n        }\r\n        return app\r\n    }\r\n}","import { hasOwn } from \"@vue/shared\"\r\n\r\n\r\nexport const componentPublicInstance = {\r\n    get({ _: instance }, key) {\r\n        const { setupState, props, ctx } = instance\r\n\r\n        // 先在自己的状态查找 然后上下文中查找，最后在属性中查找\r\n        if (hasOwn(setupState, key)) {\r\n            return setupState[key]\r\n        } else if (hasOwn(ctx, key)) {\r\n            return ctx[key]\r\n        } else if (hasOwn(props, key)) {\r\n            return props[key]\r\n        }\r\n    },\r\n\r\n    set({ _: instance }, key, value) {\r\n        const { setupState, props } = instance;\r\n\r\n        if (hasOwn(setupState, key)) {\r\n            setupState[key] = value\r\n        } else if (hasOwn(props, key)) {\r\n            props[key] = value\r\n        }\r\n        return true\r\n    }\r\n}","import { isFunction, isObject } from \"@vue/shared\";\r\nimport { componentPublicInstance } from \"./componentPubilcInstance\";\r\n\r\nlet uid = 0;\r\nexport function createComponentInstance(vnode) {\r\n    const instance = {\r\n        uid: uid++,\r\n        vnode,    // 实例上的vnode就是我们处理过的vnode\r\n        type: vnode.type,  // 用户写的组件内容\r\n        props: {},  // props就是组件里用户声明过的\r\n        attrs: {},  // 用户没有用到的props就会放到attrs\r\n        slots: {},  // 组件的插槽\r\n        setupState: {},  // setup的返回值\r\n        proxy: null,\r\n        emit: null,  // 组件通信\r\n        ctx: {},     // 上下文\r\n        isMounted: false,  // 组件是否挂载\r\n        subTree: null,  // \r\n        render: null\r\n    }\r\n    instance.ctx = { _: instance }  // 将自己放到上下文中，并在生产环境中标识不希望用户直接使用\r\n    return instance\r\n}\r\n\r\n// 根据实例创建一个上下文对象\r\nfunction createSetupContext(instance) {\r\n    return {\r\n        attrs: instance.attrs,\r\n        slots: instance.slots,\r\n        emit: instance.emit,\r\n        expose: () => { }, // 是表示组件暴露了那些方法，用户可以通过ref调用\r\n    }\r\n}\r\n\r\nfunction finishComponentSetup(instance) {\r\n\r\n    let Component = instance.type;\r\n    if(!instance.render){\r\n        if(!Component.render && Component.template){\r\n            // 将template编译为render函数 complieToFunction()\r\n        }\r\n        instance.render = Component.render;\r\n    }\r\n}\r\n\r\nfunction handleSetupResult(instance, setupResult) {\r\n    if (isObject(setupResult)) {\r\n        instance.setupState = setupResult\r\n    } else if (isFunction(setupResult)) {\r\n        instance.render = setupResult\r\n    }\r\n    //  处理 后可能依旧没有render 1） 用户没写setup  2) 用户写了setup但是什么都没返回\r\n    finishComponentSetup(instance)\r\n}\r\n\r\nfunction setupStatefulComponent(instance) {\r\n    let Component = instance.type;\r\n    let { setup } = Component;\r\n    if (setup) {\r\n        let setupContext = createSetupContext(instance);\r\n        let setupResult = setup(instance.props, setupContext)\r\n        handleSetupResult(instance, setupResult)\r\n    } else {\r\n        finishComponentSetup(instance)\r\n    }\r\n}\r\n\r\n\r\nexport function setupComponent(instance) {\r\n    let { props, children } = instance;\r\n    // 初始化属性  initProps\r\n    // 初始化插槽  initSlots\r\n\r\n    instance.props = props;\r\n    instance.slots = children;\r\n    instance.proxy = new Proxy(instance.ctx, componentPublicInstance);\r\n    setupStatefulComponent(instance)\r\n}","import { effect } from \"@vue/reactivity\";\r\nimport { ShapFlags } from \"@vue/shared\";\r\nimport { createAppAPI } from \"./apiCreateApp\";\r\nimport { createComponentInstance, setupComponent } from \"./component\";\r\n\r\n\r\n\r\n// 不需要关心什么平台\r\nexport function createRenderer(rendererOptions) {\r\n\r\n    const setupRenderEffect = (instance, container) => {\r\n        // 每次状态变化后，都会重新执行effect\r\n        effect(function componentEffect(){\r\n            if(!instance.isMounted){\r\n                // 组件渲染的内容就是subTree\r\n                let subTree = instance.subTree = instance.render.call(instance.proxy, instance.proxy) // 调用render，render需要获取数据\r\n                patch(null, subTree, container)\r\n                instance.isMounted = true;\r\n            }else{\r\n                const prevTree = instance.subTree;\r\n                const nextTree = instance.render.call(instance.proxy, instance.proxy)\r\n                instance.subTree = nextTree;\r\n\r\n                // diff算法\r\n                patch(prevTree, nextTree, container)\r\n            }\r\n        })\r\n    }\r\n\r\n    const mountComponent = (n2, container) => {\r\n        // 1.组件的创建，需要产生一个组件的实例，调用组件实例上setup方法拿到render函数，拿到组件对应的虚拟DOM， subTree\r\n        const instance = n2.component = createComponentInstance(n2)\r\n\r\n        // 给instance添加属性，调用setup,拿到里面的信息\r\n        setupComponent(instance)\r\n\r\n        // 调用render 每个组件都有一个effect\r\n\r\n        setupRenderEffect(instance, container)\r\n\r\n    }\r\n\r\n    const updateComponent = (n1, n2, container) => {\r\n\r\n    }\r\n\r\n    const processComponent = (n1, n2, container) => {  // 处理组件\r\n        if (n1 == null) {\r\n            mountComponent(n2, container)\r\n        } else {\r\n            updateComponent(n1, n2, container)\r\n        }\r\n\r\n    }\r\n    const patch = (n1, n2, container) => {\r\n        // n2可能是元素，也可能是组件\r\n        const { shapeFlag } = n2;\r\n        if (shapeFlag & ShapFlags.ELEMENT) { // 元素的虚拟节点\r\n\r\n        } else if (shapeFlag & ShapFlags.STATEFUL_COMPONENT) {  // 组件的虚拟节点\r\n            processComponent(n1, n2, container)\r\n        }\r\n    }\r\n    const render = (vnode, container) => {\r\n        patch(null, vnode, container)\r\n    }\r\n    return {\r\n        createApp: createAppAPI(render),\r\n        render\r\n    }\r\n}","/*\r\n// type only\r\nh('div')\r\n\r\n// type + props\r\nh('div', {})\r\n\r\n// type + omit props + children\r\n// Omit props does NOT support named slots\r\nh('div', []) // array\r\nh('div', 'foo') // text\r\nh('div', h('br')) // vnode\r\nh(Component, () => {}) // default slot\r\n\r\n// type + props + children\r\nh('div', {}, []) // array\r\nh('div', {}, 'foo') // text\r\nh('div', {}, h('br')) // vnode\r\nh(Component, {}, () => {}) // default slot\r\nh(Component, {}, {}) // named slots\r\n\r\n// named slots without props requires explicit `null` to avoid ambiguity\r\nh(Component, null, {})\r\n**/\r\n\r\nimport { isArray, isObject, isVnode } from \"@vue/shared\";\r\nimport { createVnode } from \"./vnode\";\r\n\r\n\r\nexport function h(type, propsOrChildren, children){\r\n    // 第一个参数一定是类型，第二个参数可能是属性可能是儿子，后面的一定都是儿子，没有属性的情况只能放数组\r\n    // 一个情况可以写文本，一个type + 一个文本\r\n\r\n    const len = arguments.length;\r\n    if(len == 2){\r\n        if(isObject(propsOrChildren) && !isArray(propsOrChildren)){\r\n            if(isVnode(propsOrChildren)){\r\n                return createVnode(type, null, [propsOrChildren])\r\n            }else{\r\n                return createVnode(type, propsOrChildren)\r\n            }\r\n        }else{\r\n            return createVnode(type, null, propsOrChildren)\r\n        }\r\n    }else{\r\n        if(len > 3){\r\n            children = Array.from(arguments).slice(2)\r\n        }else if(len === 3 && isVnode(children)){\r\n            \r\n            children = [children]\r\n        }\r\n        // 当children是文本或者是数组时，不需要处理 \r\n        // 文本在源码中不用变成数组，因为文本可以直接innerHTML\r\n        return createVnode(type, propsOrChildren, children)\r\n    }\r\n}","export const nodeOps = {\r\n    // 增 删 改 查 元素中插入文本  文本的创建 文本元素的内容设置 获取父亲 获取下一个元素\r\n    createElement: tagName => document.createElement(tagName),\r\n    remove: child => child.parentNode && child.parentNode.removeChild(child),\r\n    insert: (child, parent, anchor = null) => parent.insertBefore(child, anchor),\r\n    querySelector: selector => document.querySelector(selector),\r\n    setElementText: (el, text) => el.textContent = text,\r\n    createText: text => document.createTextNode(text),\r\n    setText: (node, text) => node.nodeValue = text,\r\n    getParent: (node) => node.parentNode,\r\n    getNextSibling: (node) => node.nextElementSibling\r\n}","\r\n/**\r\n * \r\n * @param el \r\n * @param key \r\n * @param prev \r\n * @param next \r\n */\r\n\r\nconst patchClass = (el, next) => {\r\n    if (next == null) next = ''\r\n    el.className = next;\r\n}\r\n\r\n\r\n// patchProp('div', 'style', {color: 'red'}, {background: 'blue'})\r\nconst patchStyle = (el, prev, next) => {\r\n    if (next == null) {\r\n        el.removeAttribute('style')\r\n    } else {\r\n        if (prev) {\r\n            for (let key in prev) {\r\n                if (next[key] == null) {\r\n                    el.style[key] = ''\r\n                }\r\n            }\r\n        }\r\n        for (let key in next) {\r\n            el.style[key] = next[key]\r\n        }\r\n    }\r\n}\r\n\r\nfunction createInvoker(fn) {\r\n    const invoker = (e) => {\r\n        invoker.value(e)\r\n    }\r\n    invoker.value = fn;\r\n    return invoker\r\n}\r\n\r\nconst patchEvent = (el, key, next) => {\r\n    // react 中采用的是事件代理，但是vue中直接绑定给元素的\r\n    // 之前绑定的事件和之后绑定的不一样怎么处理 ？\r\n\r\n    const invokers = el._vei || (el._vei = {})\r\n    const exists = invokers[key]\r\n    if (exists && next) {\r\n        // 替换事件\r\n        exists.value = next\r\n    } else {\r\n        const eventName = key.toLowerCase().slice(2);\r\n        if (next) {\r\n            let invoker = invokers[key] = createInvoker(next)\r\n            el.addEventListener(eventName, invoker)\r\n        } else {\r\n            el.removeEventListener(eventName, exists)\r\n            invokers[key] = null;\r\n        }\r\n    }\r\n}\r\n\r\nconst patchAttrs = (el, key, next) => {\r\n    if (next == null) {\r\n        el.removeAttribute(key)\r\n    } else {\r\n        el.setAttribute(key, next)\r\n    }\r\n}\r\n\r\nexport const patchProp = (el, key, prev, next) => {\r\n    switch (key) {\r\n        case 'class':  // .className  patchProp()\r\n            patchClass(el, next)\r\n            break;\r\n        case 'style':  // .style.xxx\r\n            patchStyle(el, prev, next)\r\n            break\r\n        default:\r\n            if (/^on[^a-z]/.test(key)) {\r\n                // 事件\r\n                patchEvent(el, key, next)\r\n            } else {\r\n                // 其他属性 直接使用 setAttribute\r\n                patchAttrs(el, key, next)\r\n            }\r\n    }\r\n}\r\n\r\n","// 需要支持dom创建的api及属性处理的api\r\n\r\nimport { createRenderer } from '@vue/runtime-core'\r\nimport { extend } from '@vue/shared'\r\nimport { nodeOps } from './nodeOps'\r\n\r\nimport { patchProp } from './patchProp'\r\n\r\n\r\n// runtime-dom主要作用就是抹平平台的差异，不同的平台对dom的操作不同，将api传入core中，core可以调用这些方法\r\nconst rendererOptions = extend(nodeOps, { patchProp })\r\n\r\n\r\n// 1. 用户传入组件的属性  2. 需要创建组件的虚拟节点 3. 将虚拟节点变成真正的节点\r\nexport const createApp = function (rootComponent, rootProps = null) {\r\n    let app = createRenderer(rendererOptions).createApp(rootComponent, rootProps)\r\n    let { mount } = app;\r\n    // 重写mount方法，不仅可以接受用户参数，还可以做一些前置工作\r\n    // 函数劫持 AOP切片编程\r\n    app.mount = function (container) {\r\n        container = rendererOptions.querySelector(container)\r\n        container.innerHTML = \"\"\r\n        mount(container)\r\n    }\r\n}\r\n\r\nexport * from \"@vue/runtime-core\" "],"names":[],"mappings":"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"}