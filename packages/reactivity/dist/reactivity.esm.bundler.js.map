{"version":3,"file":"reactivity.esm.bundler.js","sources":["../../shared/src/index.ts","../src/effect.ts","../src/basehandler.ts","../src/reactive.ts","../src/ref.ts","../src/computed.ts"],"sourcesContent":["export function isObject(val) {\r\n    return typeof val === 'object' && val != null\r\n}\r\n\r\nexport const extend = Object.assign\r\n\r\nexport function hasChange(oldValue, newValue) {\r\n    return oldValue !== newValue\r\n}\r\n\r\nexport let isIntegerKey = (key) => {\r\n    return parseInt(key) + '' === key\r\n}\r\n\r\nexport let isArray = Array.isArray;\r\n\r\nexport let isString = (val) => typeof val === 'string'\r\n\r\nexport let isFunction = val => typeof val === 'function'\r\n\r\nexport let hasOwn = (target, key) => Object.prototype.hasOwnProperty.call(target, key)\r\n\r\nexport let isVnode = (vnode) => vnode.__v_isVnode === true\r\n\r\nexport const enum ShapFlags {\r\n    ELEMENT = 1,  // 标识是一个元素\r\n    FUNCTIONAL_COMPONENT = 1 << 1,  // 函数组件\r\n    STATEFUL_COMPONENT = 1 << 2,  // 带状态组件\r\n    TEXT_CHILDREN = 1 << 3,  // 孩子是文本\r\n    ARRAY_CHILDREN = 1 << 4, // 孩子是数组\r\n    SLOTS_CHILDREN = 1 << 5,  // 插槽孩子\r\n    TELEPORT = 1 << 6,  // 传送门\r\n    SUSPENSE = 1 << 7,  // 实现异步组件等待\r\n    COMPONENT_SHOULD_KEEP_ALIVE = 1 << 8,  // 是否需要keep-alive\r\n    COMPONENT_KEEP_ALIVE = 1 << 9,  // 组件的keep-alive\r\n    COMPONET = ShapFlags.STATEFUL_COMPONENT | ShapFlags.FUNCTIONAL_COMPONENT\r\n}","import { isArray, isIntegerKey } from \"@vue/shared\";\r\n\r\nexport function effect(fn, options: any = {}) {\r\n    const effect = createReactiveEffect(fn, options)\r\n    if (!options.lazy) {\r\n        effect()\r\n    }\r\n    return effect;  // 返回响应式的effect\r\n}\r\n\r\nlet activeEffect;\r\nlet effectStack = [];\r\nlet id = 0;\r\n\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactvieEffect() {\r\n        try {\r\n            effectStack.push(effect);\r\n            activeEffect = effect;\r\n            return fn()\r\n        } finally {\r\n            effectStack.pop()\r\n            activeEffect = effectStack[effectStack.length - 1]\r\n        }\r\n    }\r\n\r\n    effect.id = id++;\r\n    effect.__isEffect = true;\r\n    effect.options = options;\r\n    effect.deps = [];  // 用来收集依赖了那些属性\r\n    return effect;\r\n}\r\n\r\nconst targetMap = new WeakMap()\r\n\r\nexport function track(target, type, key) {\r\n    if (activeEffect == undefined) {\r\n        // 用户只是进行取值操作，而且这个 值不是在effect中使用的什么都不用收集\r\n        return\r\n    }\r\n\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()))\r\n    }\r\n\r\n    let dep = depsMap.get(key)\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()))\r\n    }\r\n\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect)\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function trigger(target, type, key, newValue?, oldValue?) {\r\n    // 去映射表里找属性对应的effect，让他重新执行\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) return // 只是修改了属性，没有在effect中使用\r\n\r\n    const effectsSet = new Set();\r\n    // 如果同时又多个，依赖的effect是同一个，还有set做一个过滤\r\n    const add = (effectAdd) => {\r\n        if (effectAdd) {\r\n            effectAdd.forEach(effect => {\r\n                effectsSet.add(effect)\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // arr = [1,2,3]\r\n    // arr.length = 1\r\n    // arr.push(4)\r\n    // 1. 如果更改了数组的长度，小于依赖收集的长度，要触发重新渲染\r\n    // 2. 如果调用了push方法，或者其他新增数组的方法(必须能改变数组的长度)，也触发更新\r\n\r\n    if (isArray(target) && key === 'length') {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key > newValue || key === 'length') {\r\n                add(dep);  // 更改了数组的长度，比收集到的属性值小\r\n            }\r\n        })\r\n    } else {\r\n        add(depsMap.get(key))\r\n        switch (type) {\r\n            case 'add':\r\n                if (isArray(target) && isIntegerKey(key)) {\r\n                    // 增加属性，需要触发length 的依赖属性\r\n                    add(depsMap.get('length'))\r\n                }\r\n        }\r\n    }\r\n\r\n\r\n    effectsSet.forEach((effect: any) => {\r\n        if (effect.options.schedular) {\r\n            effect.options.schedular(effect)\r\n        } else {\r\n            effect()\r\n        }\r\n    })\r\n}","import { extend, hasChange, hasOwn, isArray, isIntegerKey, isObject } from \"@vue/shared\";\r\nimport { track, trigger } from \"./effect\";\r\nimport { reactive, readonly } from \"./reactive\";\r\n\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    // vue3针对的是对象进行劫持，不用改写原来的对象，如果是嵌套，当取值的时候才会代理\r\n    // vue2 针对的是属性劫持，改写了原来的对象，一上来就递归的\r\n    /**\r\n     * target 原来的对象\r\n     * key 设置的属性值\r\n     * receiver 代理对象\r\n     */\r\n    return function get(target, key, receiver) {\r\n        const res = Reflect.get(target, key, receiver)\r\n\r\n        if (!isReadonly) {\r\n            // console.log('收集当前属性，如果这个属性变化了，稍候进行视图更新')\r\n            track(target, 'get', key)\r\n        }\r\n\r\n        //  \r\n        if (shallow) {\r\n            return res\r\n        }\r\n\r\n        if (isObject(res)) {\r\n            // 懒递归 当我们取值的时候才会去做递归代理，如果不取值，默认代理一层\r\n            return isReadonly ? readonly(res) : reactive(res)\r\n\r\n        }\r\n        return res;\r\n    }\r\n}\r\n\r\nfunction createSetter(shallow = false) {\r\n    // 数组新增的时候，触发了两次set，1. 新增了一项，同时更改了长度。2.因为更改了长度，再次触发了set（第二次的触发时无意义的）\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n\r\n        // 设置属性，可能之前有，也有可能之前没有（新增和修改）\r\n\r\n        /**\r\n         * 如果判断数组是新增还是修改\r\n         * 1. 是数组\r\n         * 2. 修改的key是数字\r\n         * 3. key的值小于length\r\n         * 为修改\r\n         */\r\n\r\n        let hasKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key)\r\n\r\n        const res = Reflect.set(target, key, value, receiver)\r\n\r\n        if (!hasKey) {\r\n            console.log('新增')\r\n            trigger(target, 'add', key, value)\r\n        } else if (hasChange(oldValue, value)) {\r\n            console.log('修改')\r\n            trigger(target, 'set', key, value, oldValue)\r\n        }\r\n        return res;  // 返回是否设置成功\r\n    }\r\n}\r\n\r\nconst get = createGetter();\r\nconst shallowGet = createGetter(false, true)\r\nconst readonlyGet = createGetter(true)\r\nconst shallowReadonlyGet = createGetter(true, true)\r\n\r\nconst set = createSetter()\r\nconst shallowSet = createSetter(true)\r\n\r\nexport const mutableHandler = {\r\n    set: set,\r\n    get: get,\r\n}\r\n\r\nexport const shallowReactiveHandler = {\r\n    set: shallowSet,\r\n    get: shallowGet\r\n\r\n}\r\n\r\nconst readonlySet = {\r\n    set(target, key) {\r\n        console.warn(`cannot set ${JSON.stringify(target)} on key '${key}' failed`)\r\n    }\r\n}\r\n\r\nexport const readonlyHandler = extend({\r\n    get: readonlyGet\r\n}, readonlySet)\r\n\r\nexport const shallowReadonlyHandler = extend({\r\n    get: shallowReadonlyGet\r\n}, readonlySet)\r\n","import { isObject } from \"@vue/shared\"\r\nimport { mutableHandler, readonlyHandler, shallowReactiveHandler, shallowReadonlyHandler } from \"./basehandler\"\r\n\r\n\r\n\r\n// 是否是浅的，默认时深度\r\n// 是否为只读，默认为否\r\n\r\nexport function reactive(target) {\r\n    return createReactiveObject(target, false, mutableHandler)\r\n}\r\n\r\nexport function shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandler)\r\n}\r\n\r\nexport function readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandler)\r\n}\r\n\r\nexport function shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandler)\r\n}\r\n\r\n/**\r\n * \r\n * @param target 创建代理对象目标\r\n * @param isReadonly 是否为只读\r\n * @param baseHandler 针对不同的方法创建不同的代理对象\r\n */\r\n\r\n// weakMap(key只能时对象) \r\nconst reactiveMap = new WeakMap();  // 目的是添加缓存\r\nconst readonlyMap = new WeakMap();\r\nfunction createReactiveObject(target, isReadonly, baseHandler) {\r\n    if(!isObject(target)){\r\n        return target\r\n    }\r\n    // 代理缓存\r\n    let proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n\r\n    const existProxy = proxyMap.get(target)\r\n    if(existProxy){\r\n        return existProxy; // 如果\r\n    }\r\n    // 如果是对象，就做一个代理\r\n    const proxy = new Proxy(target, baseHandler);\r\n    proxyMap.set(target, proxy)\r\n    return proxy\r\n}","import { hasChange, isArray, isObject } from \"@vue/shared\";\r\nimport { track, trigger } from \"./effect\";\r\nimport { reactive } from \"./reactive\";\r\n\r\nexport function ref(value) {\r\n    // 把普通值变成一个引用类型，让一个普通值也具备响应式的能力\r\n    return createRef(value)\r\n}\r\n\r\nexport function shallowRef(value) {\r\n    return createRef(value, true)\r\n}\r\n\r\nconst convert = (v) => isObject(v) ? reactive(v) : v;\r\n\r\n// ts 中实现类的话，私有属性必须先声明才能使用\r\nclass RefImpl {\r\n    public _value;\r\n    constructor(public rawValue, public shallow) {\r\n        this._value = shallow ? rawValue : convert(rawValue)\r\n    }\r\n\r\n    get value() {\r\n        // 收集依赖\r\n        track(this, 'get', 'value')\r\n        return this._value\r\n    }\r\n\r\n    set value(newValue) {\r\n        // 触发更新\r\n        if (hasChange(newValue, this.rawValue)) {\r\n            this.rawValue = newValue;\r\n            this._value = this.shallow ? newValue : convert(newValue)\r\n\r\n            trigger(this, 'set', 'value', newValue)\r\n        }\r\n    }\r\n}\r\n\r\nfunction createRef(value, shallow = false) {\r\n    return new RefImpl(value, shallow);  // 借助类的属性访问器\r\n}\r\n\r\nclass ObjectRefImpl {\r\n    public __v_isRef = true;\r\n    constructor(public target, public key) {\r\n\r\n    }\r\n    get value() {\r\n        return this.target[this.key]\r\n    }\r\n    set value(newValue) {\r\n        this.target[this.key] = newValue\r\n    }\r\n}\r\n\r\nexport function toRef(target, key) {\r\n    return new ObjectRefImpl(target, key)\r\n}\r\n\r\n\r\nexport function toRefs(target, key) {\r\n    const res = isArray(target) ? new Array(target.length) : {}\r\n    for (let key in target) {\r\n        res[key] = toRef(target, key)\r\n    }\r\n    return res;\r\n}","import { isObject } from \"@vue/shared\";\r\nimport { effect, track, trigger } from \"./effect\";\r\n\r\nclass ComputedRefImpl {\r\n    public effect;\r\n    public _value;\r\n    public _dirty = true;\r\n    constructor(public getter, public setter) {\r\n        // 返回effect的执行权限\r\n        // 传入了schedular 后，下次数据更新，原则上应该让effec重新执行，下次更新会调用schedular\r\n        this.effect = effect(getter, {\r\n            lazy: true, schedular: (effect) => {\r\n                if (!this._dirty) {\r\n                    // 用户修改了依赖的属性\r\n                    this._dirty = true;\r\n                    trigger(this, 'get', 'value')\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    get value() {\r\n        if (this._dirty) {\r\n            this._value = this.effect()\r\n            this._dirty = false;\r\n        }\r\n        // 收集计算属性的依赖\r\n        track(this, 'get', 'value')\r\n        return this._value\r\n    }\r\n\r\n    set value(newValue) {\r\n        // 当用户给计算属性设置值时会触发，set方法，此时调用计算属性的setter\r\n        this.setter(newValue)\r\n    }\r\n}\r\n\r\nexport function computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n\r\n    if (isObject(getterOrOptions)) {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    } else {\r\n        getter = getterOrOptions;\r\n        setter = () => {\r\n            console.log(`computed no setter`)\r\n        }\r\n    }\r\n\r\n    return new ComputedRefImpl(getter, setter)\r\n}"],"names":[],"mappings":"SAAgB,QAAQ,CAAC,GAAG;IACxB,OAAO,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,IAAI,IAAI,CAAA;AACjD,CAAC;AAEM,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAA;SAEnB,SAAS,CAAC,QAAQ,EAAE,QAAQ;IACxC,OAAO,QAAQ,KAAK,QAAQ,CAAA;AAChC,CAAC;AAEM,IAAI,YAAY,GAAG,UAAC,GAAG;IAC1B,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,GAAG,CAAA;AACrC,CAAC,CAAA;AAEM,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;AAM5B,IAAI,MAAM,GAAG,UAAC,MAAM,EAAE,GAAG,IAAK,OAAA,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAA;;SClBtE,MAAM,CAAC,EAAE,EAAE,OAAiB;IAAjB,wBAAA,EAAA,YAAiB;IACxC,IAAM,MAAM,GAAG,oBAAoB,CAAC,EAAE,EAAE,OAAO,CAAC,CAAA;IAChD,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;QACf,MAAM,EAAE,CAAA;KACX;IACD,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,IAAI,YAAY,CAAC;AACjB,IAAI,WAAW,GAAG,EAAE,CAAC;AACrB,IAAI,EAAE,GAAG,CAAC,CAAC;AAEX,SAAS,oBAAoB,CAAC,EAAE,EAAE,OAAO;IACrC,IAAM,MAAM,GAAG,SAAS,cAAc;QAClC,IAAI;YACA,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzB,YAAY,GAAG,MAAM,CAAC;YACtB,OAAO,EAAE,EAAE,CAAA;SACd;gBAAS;YACN,WAAW,CAAC,GAAG,EAAE,CAAA;YACjB,YAAY,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;SACrD;KACJ,CAAA;IAED,MAAM,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;IACjB,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,IAAM,SAAS,GAAG,IAAI,OAAO,EAAE,CAAA;SAEf,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG;IACnC,IAAI,YAAY,IAAI,SAAS,EAAE;;QAE3B,OAAM;KACT;IAED,IAAI,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACpC,IAAI,CAAC,OAAO,EAAE;QACV,SAAS,CAAC,GAAG,CAAC,MAAM,GAAG,OAAO,GAAG,IAAI,GAAG,EAAE,EAAE,CAAA;KAC/C;IAED,IAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IAC1B,IAAI,CAAC,GAAG,EAAE;QACN,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,EAAE,CAAA;KACtC;IAED,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;QACxB,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,CAAA;KACxB;AAGL,CAAC;SAEe,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,QAAS,EAAE,QAAS;;IAE3D,IAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACtC,IAAI,CAAC,OAAO;QAAE,OAAM;IAEpB,IAAM,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;;IAE7B,IAAM,GAAG,GAAG,UAAC,SAAS;QAClB,IAAI,SAAS,EAAE;YACX,SAAS,CAAC,OAAO,CAAC,UAAA,MAAM;gBACpB,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;aACzB,CAAC,CAAC;SACN;KACJ,CAAA;;;;;;IAUD,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,GAAG,KAAK,QAAQ,EAAE;QACrC,OAAO,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,GAAG;YACrB,IAAI,GAAG,GAAG,QAAQ,IAAI,GAAG,KAAK,QAAQ,EAAE;gBACpC,GAAG,CAAC,GAAG,CAAC,CAAC;aACZ;SACJ,CAAC,CAAA;KACL;SAAM;QACH,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;QACrB,QAAQ,IAAI;YACR,KAAK,KAAK;gBACN,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,YAAY,CAAC,GAAG,CAAC,EAAE;;oBAEtC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAA;iBAC7B;SACR;KACJ;IAGD,UAAU,CAAC,OAAO,CAAC,UAAC,MAAW;QAC3B,IAAI,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE;YAC1B,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;SACnC;aAAM;YACH,MAAM,EAAE,CAAA;SACX;KACJ,CAAC,CAAA;AACN;;ACtGA,SAAS,YAAY,CAAC,UAAkB,EAAE,OAAe;IAAnC,2BAAA,EAAA,kBAAkB;IAAE,wBAAA,EAAA,eAAe;;;;;;;;IAQrD,OAAO,SAAS,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ;QACrC,IAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAA;QAE9C,IAAI,CAAC,UAAU,EAAE;;YAEb,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;SAC5B;;QAGD,IAAI,OAAO,EAAE;YACT,OAAO,GAAG,CAAA;SACb;QAED,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;;YAEf,OAAO,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAA;SAEpD;QACD,OAAO,GAAG,CAAC;KACd,CAAA;AACL,CAAC;AAED,SAAS,YAAY,CAAC,OAAe;;IAEjC,OAAO,SAAS,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ;QAC5C,IAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;;;;;;;;;QAY7B,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,YAAY,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;QAErG,IAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAA;QAErD,IAAI,CAAC,MAAM,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;YACjB,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAA;SACrC;aAAM,IAAI,SAAS,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE;YACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;YACjB,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,KAAe,CAAC,CAAA;SAC/C;QACD,OAAO,GAAG,CAAC;KACd,CAAA;AACL,CAAC;AAED,IAAM,GAAG,GAAG,YAAY,EAAE,CAAC;AAC3B,IAAM,UAAU,GAAG,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;AAC5C,IAAM,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC,CAAA;AACtC,IAAM,kBAAkB,GAAG,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;AAEnD,IAAM,GAAG,GAAG,YAAY,EAAE,CAAA;AAC1B,IAAM,UAAU,GAAG,YAAY,CAAK,CAAC,CAAA;AAE9B,IAAM,cAAc,GAAG;IAC1B,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;CACX,CAAA;AAEM,IAAM,sBAAsB,GAAG;IAClC,GAAG,EAAE,UAAU;IACf,GAAG,EAAE,UAAU;CAElB,CAAA;AAED,IAAM,WAAW,GAAG;IAChB,GAAG,YAAC,MAAM,EAAE,GAAG;QACX,OAAO,CAAC,IAAI,CAAC,gBAAc,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAY,GAAG,aAAU,CAAC,CAAA;KAC9E;CACJ,CAAA;AAEM,IAAM,eAAe,GAAG,MAAM,CAAC;IAClC,GAAG,EAAE,WAAW;CACnB,EAAE,WAAW,CAAC,CAAA;AAER,IAAM,sBAAsB,GAAG,MAAM,CAAC;IACzC,GAAG,EAAE,kBAAkB;CAC1B,EAAE,WAAW,CAAC;;AC1Ff;AACA;SAEgB,QAAQ,CAAC,MAAM;IAC3B,OAAO,oBAAoB,CAAC,MAAM,EAAE,KAAK,EAAE,cAAc,CAAC,CAAA;AAC9D,CAAC;SAEe,eAAe,CAAC,MAAM;IAClC,OAAO,oBAAoB,CAAC,MAAM,EAAE,KAAK,EAAE,sBAAsB,CAAC,CAAA;AACtE,CAAC;SAEe,QAAQ,CAAC,MAAM;IAC3B,OAAO,oBAAoB,CAAC,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,CAAA;AAC9D,CAAC;SAEe,eAAe,CAAC,MAAM;IAClC,OAAO,oBAAoB,CAAC,MAAM,EAAE,IAAI,EAAE,sBAAsB,CAAC,CAAA;AACrE,CAAC;AAED;;;;;;AAOA;AACA,IAAM,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC;AAClC,IAAM,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC;AAClC,SAAS,oBAAoB,CAAC,MAAM,EAAE,UAAU,EAAE,WAAW;IACzD,IAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;QACjB,OAAO,MAAM,CAAA;KAChB;;IAED,IAAI,QAAQ,GAAG,UAAU,GAAG,WAAW,GAAG,WAAW,CAAC;IAEtD,IAAM,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;IACvC,IAAG,UAAU,EAAC;QACV,OAAO,UAAU,CAAC;KACrB;;IAED,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;IAC7C,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAC3B,OAAO,KAAK,CAAA;AAChB;;SC7CgB,GAAG,CAAC,KAAK;;IAErB,OAAO,SAAS,CAAC,KAAK,CAAC,CAAA;AAC3B,CAAC;AAMD,IAAM,OAAO,GAAG,UAAC,CAAC,IAAK,OAAA,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAA,CAAC;AAErD;AACA;IAEI,iBAAmB,QAAQ,EAAS,OAAO;QAAxB,aAAQ,GAAR,QAAQ,CAAA;QAAS,YAAO,GAAP,OAAO,CAAA;QACvC,IAAI,CAAC,MAAM,GAAG,OAAO,GAAG,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;KACvD;IAED,sBAAI,0BAAK;aAAT;;YAEI,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;YAC3B,OAAO,IAAI,CAAC,MAAM,CAAA;SACrB;aAED,UAAU,QAAQ;;YAEd,IAAI,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACpC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;gBAEzD,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAA;aAC1C;SACJ;;;OAVA;IAWL,cAAC;AAAD,CAAC,IAAA;AAED,SAAS,SAAS,CAAC,KAAK,EAAE,OAAe;IAAf,wBAAA,EAAA,eAAe;IACrC,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACvC,CAAC;AAED;IAEI,uBAAmB,MAAM,EAAS,GAAG;QAAlB,WAAM,GAAN,MAAM,CAAA;QAAS,QAAG,GAAH,GAAG,CAAA;QAD9B,cAAS,GAAG,IAAI,CAAC;KAGvB;IACD,sBAAI,gCAAK;aAAT;YACI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;SAC/B;aACD,UAAU,QAAQ;YACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAA;SACnC;;;OAHA;IAIL,oBAAC;AAAD,CAAC,IAAA;SAEe,KAAK,CAAC,MAAM,EAAE,GAAG;IAC7B,OAAO,IAAI,aAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;AACzC,CAAC;SAGe,MAAM,CAAC,MAAM,EAAE,GAAG;IAC9B,IAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAA;IAC3D,KAAK,IAAI,KAAG,IAAI,MAAM,EAAE;QACpB,GAAG,CAAC,KAAG,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,KAAG,CAAC,CAAA;KAChC;IACD,OAAO,GAAG,CAAC;AACf;;AChEA;IAII,yBAAmB,MAAM,EAAS,MAAM;QAAxC,iBAYC;QAZkB,WAAM,GAAN,MAAM,CAAA;QAAS,WAAM,GAAN,MAAM,CAAA;QADjC,WAAM,GAAG,IAAI,CAAC;;;QAIjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE;YACzB,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,UAAC,MAAM;gBAC1B,IAAI,CAAC,KAAI,CAAC,MAAM,EAAE;;oBAEd,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACnB,OAAO,CAAC,KAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;iBAChC;aACJ;SACJ,CAAC,CAAA;KACL;IAED,sBAAI,kCAAK;aAAT;YACI,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAA;gBAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACvB;;YAED,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;YAC3B,OAAO,IAAI,CAAC,MAAM,CAAA;SACrB;aAED,UAAU,QAAQ;;YAEd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;SACxB;;;OALA;IAML,sBAAC;AAAD,CAAC,IAAA;SAEe,QAAQ,CAAC,eAAe;IACpC,IAAI,MAAM,CAAC;IACX,IAAI,MAAM,CAAC;IAEX,IAAI,QAAQ,CAAC,eAAe,CAAC,EAAE;QAC3B,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC;QAC7B,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC;KAChC;SAAM;QACH,MAAM,GAAG,eAAe,CAAC;QACzB,MAAM,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAA;SACpC,CAAA;KACJ;IAED,OAAO,IAAI,eAAe,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;AAC9C;;;;"}